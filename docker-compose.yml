services:
  nginx:
    image: nginx:latest
    container_name: fahras-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./api/public:/var/www/html/public:ro
    depends_on:
      php:
        condition: service_healthy
      laravel-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - fahras-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  php:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fahras-php
    restart: unless-stopped
    volumes:
      - ./api:/var/www/html
      - ./api/php-custom.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - php_storage:/var/www/html/storage
    environment:
      # Database Configuration
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-fahras}
      - DB_USERNAME=${DB_USERNAME:-fahras}
      - DB_PASSWORD=${DB_PASSWORD:-fahras_password}
      
      # Application Configuration
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_KEY=${APP_KEY:-base64:4dluFFSMqwyQ39UlPaPSkaVNovvu+ZgrkOOZvdVj0M8=}
      - APP_URL=${APP_URL:-http://localhost}
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - SESSION_DRIVER=redis
      
      # S3/MinIO Configuration
      - FILESYSTEM_DISK=s3
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-minioadmin}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-minioadmin123}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_BUCKET=${AWS_BUCKET:-fahras-files}
      - AWS_ENDPOINT=http://minio:9000
      - AWS_URL=${AWS_URL:-http://localhost:9000}
      - AWS_USE_PATH_STYLE_ENDPOINT=true
      
      # UTF-8 Support for Arabic/Unicode filenames
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      
      # PHP Configuration
      - PHP_MEMORY_LIMIT=512M
      - PHP_UPLOAD_MAX_FILESIZE=100M
      - PHP_POST_MAX_SIZE=100M
      - PHP_MAX_EXECUTION_TIME=300
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t 2>/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - fahras-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  db:
    image: postgres:16-alpine
    container_name: fahras-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-fahras}
      POSTGRES_USER: ${DB_USERNAME:-fahras}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fahras_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-fahras} -d ${DB_DATABASE:-fahras} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    networks:
      - fahras-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    shm_size: 256mb
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  redis:
    image: redis:7-alpine
    container_name: fahras-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --save 60 1000 --tcp-backlog 511
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
      - fahras-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  node:
    image: node:20-alpine
    container_name: fahras-node
    restart: unless-stopped
    volumes:
      - ./web:/app
      - node_modules:/app/node_modules
    working_dir: /app
    ports:
      - "${NODE_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://localhost/api}
      - CI=false
    command: sh -c "npm cache clean --force 2>/dev/null || true && npm install --no-audit --prefer-offline && npm start"
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000 || exit 0"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s
    networks:
      - fahras-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  minio:
    image: minio/minio:latest
    container_name: fahras-minio
    restart: unless-stopped
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID:-minioadmin}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-minioadmin123}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL:-http://localhost:9001}
      # Enable UTF-8 support for Arabic/Unicode filenames
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - fahras-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  minio-init:
    image: minio/mc:latest
    container_name: fahras-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Configuring MinIO...';
      mc alias set myminio http://minio:9000 ${AWS_ACCESS_KEY_ID:-minioadmin} ${AWS_SECRET_ACCESS_KEY:-minioadmin123};
      mc mb myminio/${AWS_BUCKET:-fahras-files} --ignore-existing;
      mc anonymous set download myminio/${AWS_BUCKET:-fahras-files};
      echo 'MinIO configured successfully!';
      exit 0;
      "
    networks:
      - fahras-network

  laravel-init:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fahras-laravel-init
    volumes:
      - ./api:/var/www/html
      - php_storage:/var/www/html/storage
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-fahras}
      - DB_USERNAME=${DB_USERNAME:-fahras}
      - DB_PASSWORD=${DB_PASSWORD:-fahras_password}
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_KEY=${APP_KEY:-base64:4dluFFSMqwyQ39UlPaPSkaVNovvu+ZgrkOOZvdVj0M8=}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo '🚀 Starting Laravel initialization...';
      
      echo '📁 Setting up storage permissions...';
      chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache 2>/dev/null || true;
      chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache 2>/dev/null || true;
      
      echo '⏳ Waiting for database to be ready...';
      sleep 10;
      
      echo '📊 Running database migrations...';
      php artisan migrate --force || echo 'Migrations already run or failed';
      
      echo '🌱 Running database seeders...';
      php artisan db:seed --force || echo 'Seeders already run or failed';
      
      echo '🧹 Clearing caches...';
      php artisan config:clear || true;
      php artisan cache:clear || true;
      php artisan route:clear || true;
      php artisan view:clear || true;
      
      echo '✅ Laravel initialization complete!';
      exit 0;
      "
    networks:
      - fahras-network
    restart: "no"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  node_modules:
    driver: local
  php_storage:
    driver: local

networks:
  fahras-network:
    driver: bridge
