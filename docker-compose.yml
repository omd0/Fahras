services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./api/public:/var/www/html/public
    depends_on:
      - php
    networks:
      - fahras-network

  php:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www/html
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=fahras
      - DB_USERNAME=fahras
      - DB_PASSWORD=fahras_password
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:4dluFFSMqwyQ39UlPaPSkaVNovvu+ZgrkOOZvdVj0M8=
      - FILESYSTEM_DISK=s3
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin123
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_BUCKET=fahras-files
      - AWS_ENDPOINT=http://minio:9000
      - AWS_URL=http://localhost:9000
      - AWS_USE_PATH_STYLE_ENDPOINT=true
    depends_on:
      - db
      - redis
      - minio
    networks:
      - fahras-network

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: fahras
      POSTGRES_USER: fahras
      POSTGRES_PASSWORD: fahras_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - fahras-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - fahras-network

  node:
    image: node:20-alpine
    volumes:
      - ./web:/app
    working_dir: /app
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm start"
    networks:
      - fahras-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fahras-network

  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Configuring MinIO...';
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb myminio/fahras-files --ignore-existing;
      mc anonymous set download myminio/fahras-files;
      echo 'MinIO configured successfully!';
      "
    networks:
      - fahras-network

volumes:
  postgres_data:
  minio_data:

networks:
  fahras-network:
    driver: bridge
